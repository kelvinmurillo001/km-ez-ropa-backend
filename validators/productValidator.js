// üìÅ backend/validators/productValidator.js
import { body } from 'express-validator'

/**
 * ‚ûï Validaciones para crear un nuevo producto
 */
export const createProductValidation = [
  body('name')
    .notEmpty().withMessage('‚ö†Ô∏è El nombre del producto es obligatorio.')
    .isLength({ min: 2 }).withMessage('‚ö†Ô∏è El nombre debe tener al menos 2 caracteres.'),

  body('price')
    .notEmpty().withMessage('‚ö†Ô∏è El precio es obligatorio.')
    .isFloat({ gt: 0 }).withMessage('‚ö†Ô∏è El precio debe ser un n√∫mero mayor a 0.'),

  body('category')
    .notEmpty().withMessage('‚ö†Ô∏è La categor√≠a es obligatoria.'),

  body('subcategory')
    .notEmpty().withMessage('‚ö†Ô∏è La subcategor√≠a es obligatoria.'),

  body('tallaTipo')
    .notEmpty().withMessage('‚ö†Ô∏è El tipo de talla es obligatorio.'),

  body('images')
    .isArray({ min: 1, max: 1 }).withMessage('‚ö†Ô∏è Debes enviar una imagen principal (array con 1 objeto).'),

  body('images.*.url')
    .notEmpty().withMessage('‚ö†Ô∏è La imagen principal necesita una URL v√°lida.'),

  body('images.*.cloudinaryId')
    .notEmpty().withMessage('‚ö†Ô∏è cloudinaryId de imagen requerido.'),

  body('images.*.talla')
    .notEmpty().withMessage('‚ö†Ô∏è La talla de la imagen es obligatoria.'),

  body('images.*.color')
    .notEmpty().withMessage('‚ö†Ô∏è El color de la imagen es obligatorio.'),

  body('createdBy')
    .notEmpty().withMessage('‚ö†Ô∏è El campo createdBy es obligatorio.'),

  body('variants')
    .optional()
    .isArray({ max: 4 }).withMessage('‚ö†Ô∏è M√°ximo 4 variantes permitidas.'),

  body('variants.*.talla')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere una talla.'),

  body('variants.*.color')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere un color.'),

  body('variants.*.imageUrl')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere una imagen.'),

  body('variants.*.cloudinaryId')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere un cloudinaryId.'),

  body('variants.*.stock')
    .optional()
    .isInt({ min: 0 }).withMessage('‚ö†Ô∏è El stock de cada variante debe ser un n√∫mero entero ‚â• 0.')
]

/**
 * ‚úèÔ∏è Validaciones para actualizar un producto existente
 */
export const updateProductValidation = [
  body('name')
    .optional()
    .isLength({ min: 2 }).withMessage('‚ö†Ô∏è Nombre demasiado corto.'),

  body('price')
    .optional()
    .isFloat({ gt: 0 }).withMessage('‚ö†Ô∏è El precio debe ser positivo.'),

  body('category')
    .optional()
    .isString().withMessage('‚ö†Ô∏è Categor√≠a inv√°lida.'),

  body('subcategory')
    .optional()
    .isString().withMessage('‚ö†Ô∏è Subcategor√≠a inv√°lida.'),

  body('tallaTipo')
    .optional()
    .isString().withMessage('‚ö†Ô∏è Tipo de talla inv√°lido.'),

  body('color')
    .optional()
    .isString().withMessage('‚ö†Ô∏è Color inv√°lido.'),

  body('sizes')
    .optional()
    .isArray().withMessage('‚ö†Ô∏è Sizes debe ser un arreglo.'),

  body('variants')
    .optional()
    .isArray({ max: 4 }).withMessage('‚ö†Ô∏è M√°ximo 4 variantes permitidas.'),

  body('variants.*.talla')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere una talla.'),

  body('variants.*.color')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere un color.'),

  body('variants.*.imageUrl')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è Cada variante requiere una imagen.'),

  body('variants.*.cloudinaryId')
    .optional()
    .notEmpty().withMessage('‚ö†Ô∏è cloudinaryId requerido en la variante.'),

  body('variants.*.stock')
    .optional()
    .isInt({ min: 0 }).withMessage('‚ö†Ô∏è El stock de la variante debe ser un n√∫mero ‚â• 0.'),

  body('images')
    .optional()
    .isArray().withMessage('‚ö†Ô∏è Images debe ser un arreglo.')
]
